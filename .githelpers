#!/bin/bash
# vim: ft=sh

# Log output:
#
# * 51c333e    12 days    Gary Bernhardt   add vim-eunuch
#
# The log format uses } characters between each field, and `column` is later
# used to split on them. A } in the commit subject or any other field will
# break this.

HASH="%C(black)%h%Creset"
RELATIVE_TIME="%C(green)%ar%Creset"
AUTHOR="%C(blue)%an%Creset"
REFS="%C(red)%d%Creset"
SUBJECT="%s"

FORMAT="$HASH}$RELATIVE_TIME}$AUTHOR}$REFS $SUBJECT"

show_git_head() {
    pretty_git_log -1
    git show -p --pretty="tformat:"
}

pretty_git_log() {
    git log --abbrev-commit --decorate --date=relative --pretty="tformat:${FORMAT}" $* |
        sed -Ee 's/(second[s]?|minute[s]?|hour[s]?|day[s]?|week[s]?|month[s]?|year[s]?) ago/\1/' |
        sed -Ee 's/\*[[:space:]]+/▪ /g' |
        # Line columns up based on } delimiter
        column -s '}' -t |
        # Page only if we need to
        less -FXRS
}

pretty_git_merges() {
    git log --merges --abbrev-commit --decorate --date=relative --pretty="tformat:${FORMAT}" $* |
        sed -Ee 's/(second[s]?|minute[s]?|hour[s]?|day[s]?|week[s]?|month[s]?|year[s]?) ago/\1/' |
        sed -Ee 's/\*[[:space:]]+/▪ /g' |
        sed -Ee '/Merge( remote.tracking)? branch/d' |
        # Line columns up based on } delimiter
        column -s '}' -t |
        # Page only if we need to
        less -FXRS
}
